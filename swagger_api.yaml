swagger: '2.0'
info:
  description: "Devoir final du module Frontend-Backend"
  version: "1.0.0"
  title: "Articles Editor"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "warm-mesa-18064.herokuapp.com"
basePath: "/api"
tags:
- name: "articles"
  description: "Permet d'interagir avec les articles"
- name: "paragraphs"
  description: "Permet d'interagir avec les paragraphes"
schemes:
- "https"
paths:
  /articles:
    get:
      tags:
      - "articles"
      summary: "Récupère la liste des articles"
      description: "Récupère la liste des articles"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ListArticles"
    post:
      tags:
      - "articles"
      summary: "Crée un nouvel article"
      description: "Crée un nouvel article"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objet Article à créer"
        required: true
        schema:
          $ref: "#/definitions/NewArticle"
      responses:
        201:
          description: "Article créé"
          schema:
            $ref: '#/definitions/ArticleWithParagraphs'
        404:
          description: "Article not created"
  /articles/{articleId}:
    get:
      tags:
      - "articles"
      summary: "Récupère un article"
      description: "Récupère un article"
      parameters:
      - name: "articleId"
        in: "path"
        description: "ID de l'article à récupérer"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: Article
          schema:
            $ref: '#/definitions/ArticleWithParagraphs'
    patch:
      tags:
      - "articles"
      summary: "Édite le titre d'un article"
      description: "Édite le titre d'un article"
      consumes:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "ID de l'article à éditer"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Nouveau titre pour l'article"
        required: true
        schema:
          $ref: "#/definitions/NewTitle"
      responses:
        200:
          description: "Article modifié"
          schema:
            $ref: '#/definitions/ArticleWithParagraphs'
        404:
          description: "Article non modifié"
    delete:
      tags:
      - "articles"
      summary: "Supprime un article"
      description: "Supprime un article"
      responses:
        204:
          description: "Article supprimé"
      parameters:
      - name: "articleId"
        in: "path"
        description: "ID de l'article à supprimer"
        required: true
        type: "integer"
        format: "int64"
  /articles/{articleId}/paragraphs:
    post:
      tags:
      - "paragraphs"
      summary: "Ajoute un paragraphe à un article"
      description: "Ajoute un paragraphe à un article"
      consumes:
      - "application/json"
      parameters:
      - name: "articleId"
        in: "path"
        description: "ID de l'article auquel rajouter un paragraphe"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        required: true
        description: "Objet Paragraphe à sauvegarder"
        schema:
          $ref: '#/definitions/NewParagraph'
      responses:
        201:
          description: Paragraphe
          schema:
            $ref: '#/definitions/Paragraph'
        404:
          description: "Paragraphe non créé"
  /paragraphs/{paragraphId}:
    get:
      tags:
      - "paragraphs"
      summary: Récupère un paragraphe
      description: Récupère un paragraphe
      parameters:
      - name: "paragraphId"
        in: "path"
        description: "ID du paragraphe à récupérer"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: Paragraphe
          schema:
            $ref: '#/definitions/Paragraph'
    patch:
      tags:
      - "paragraphs"
      summary: "Édite le contenu ou l'ordre d'un paragraphe"
      description: "Édite le contenu ou l'ordre d'un paragraphe"
      consumes:
      - "application/json"
      parameters:
      - name: "paragraphId"
        in: "path"
        description: "ID du paragraphe à éditer"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Nouveau contenu pour le paragraphe, ou nouvelle position. Il ne faut envoyer que l'une des deux clés `content` ou `order`, mais des limitations de Swagger obligent à créer un schéma contenant les deux. Exemple : `{\"content\": \"Nouveau contenu\"}` ou `{\"order\": 5}`"
        required: true
        schema:
          $ref: '#/definitions/EditParagraph'
      responses:
        200:
          description: "Paragraphe modifié"
          schema:
            $ref: '#/definitions/Paragraph'
        404:
          description: "Paragraphe non modifié"
    delete:
      tags:
      - "paragraphs"
      summary: Supprime un paragraphe
      description: Supprime un paragraphe
      responses:
        204:
          description: Paragraphe supprimé
      parameters:
      - name: "paragraphId"
        in: "path"
        description: "ID du paragraphe à supprimer"
        required: true
        type: "integer"
        format: "int64"



definitions:
  NewArticle:
    type: "object"
    properties:
      title:
        type: "string"
  Article:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
  ArticleWithParagraphs:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      paragraphs:
        type: "array"
        items:
          type: "object"
          properties:
            order:
              type: "integer"
              format: "int64"
            content:
              type: "string"
  ListArticles:
    type: "array"
    items:
      $ref: "#/definitions/Article"
  NewParagraph:
    type: "object"
    properties:
      content:
        type: "string"
  Paragraph:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      content:
        type: "string"
      order:
        type: "integer"
        format: "int64"
  NewTitle:
    type: "object"
    properties:
      title:
        type: "string"
  EditParagraph:
    type: "object"
    properties:
      content:
        type: "string"
      order:
        type: "integer"
        format: "int64"
